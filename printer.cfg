# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader". Also, select "Enable extra
# low-level configuration options" and configure "GPIO pins to set at
# micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 3
position_max: 220
position_min: 3
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: -9.5
position_max: 220
position_min: -9.5
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: ^PC2
endstop_pin: probe:z_virtual_endstop
# position_endstop: 0.0
position_max: 220
position_min: -3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 1.16
hold_current: 1.000
stealthchop_threshold: 999999

[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: -37.5
y_offset: 15.5
#z_offset: 2.7
samples: 3
set_output_mode: 5V
stow_on_each_sample: True

[safe_z_home]
# home at screws_tilt_adjust baseline screw
home_xy_position: 69, 20
speed: 50
z_hop: 10
z_hop_speed: 5

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 35.5, 35.5
mesh_max: 182.5, 199.5
probe_count: 7, 7
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0
# everything relative to the probe closest to the screws_tilt_adjust baseline screw
relative_reference_index: 0

[screws_tilt_adjust]
screw1: 69, 20
screw1_name: front left screw
screw2: 220, 20
screw2_name: front right screw
screw3: 220, 184
screw3_name: rear right screw
screw4: 69, 184
screw4_name: rear left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

[thermistor ATC Semitec 104NT-4-R025H42G]
temperature1: 25
resistance1: 100000
temperature2: 160
resistance2: 1074
temperature3: 300
resistance3: 82.78

[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD2
microsteps: 16
rotation_distance: 22.554
gear_ratio: 80:20
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA0
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300
pressure_advance: 0
max_extrude_only_distance: 150.0

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.400
hold_current: 0.350
stealthchop_threshold: 0

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC3
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan nozzle_cooling_fan]
pin: PC7

[fan]
pin: PC6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_37FFD6055358353215710843-if00

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 4000
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5.0

[static_digital_output usb_pullup_enable]
pins: !PA14

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5, EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

# See the sample-lcd.cfg file for definitions of common LCD displays.

[input_shaper]
shaper_freq_x: 36.842
shaper_freq_y: 42.918

[gcode_arcs]

[respond]

[firmware_retraction]
retract_length: 2
retract_speed: 25
unretract_extra_length: 0
unretract_speed: 25

[temperature_sensor cpu]
sensor_type: temperature_host

[temperature_sensor mcu]
sensor_type: temperature_mcu

[gcode_macro START_PRINT]
default_parameter_BED_TEMP: 60
default_parameter_EXTRUDER_TEMP: 190
gcode:
  M117
  CLEAR_PAUSE
  # Reset Extruder
  G92 E0
  # preheat bed
  M190 S{BED_TEMP}
  # Home all axes once the bed has reached temp
  G28
  BED_MESH_PROFILE LOAD=default
  G28
  M117 Heating extruder...
  M109 S{EXTRUDER_TEMP} T0
  M117
  # Move Z Axis up a little to prevent scratching of Heat Bed
  G1 Z2.0 F3000
  # Move to start position
  G1 X{printer.toolhead.axis_minimum.x + 0.1} Y20 Z0.3 F5000.0
  # Draw the first line
  G1 X{printer.toolhead.axis_minimum.x + 0.1} Y200.0 Z0.3 F1500.0 E15
  # Move to side a little
  G1 X{printer.toolhead.axis_minimum.x + 0.4} Y200.0 Z0.3 F5000.0
  # Draw the second line
  G1 X{printer.toolhead.axis_minimum.x + 0.4} Y20 Z0.3 F1500.0 E30
  # Reset Extruder
  G92 E0
  # Move Z Axis up little to prevent scratching of Heat Bed
  G1 Z2.0 F3000
  # Move over to prevent blob squish
  G1 X5 Y20 Z0.3 F5000.0

[gcode_macro END_PRINT]
default_parameter_Z_LIFT: 10
gcode:
  TURN_OFF_HEATERS
  SAVE_GCODE_STATE NAME=END_state
  G91
  G1 E-2 F2700         ; retract a bit
  G1 E-2 Z0.2 F2400    ; retract and raise Z
  G1 X5 Y5 F3000       ; wipe out

  ; if the tool is less than Z_LIFT away from Z Max, move it to Z max, otherwise, move Z up Z_LIFT
  {% if printer.toolhead.position.z|float + Z_LIFT|float >= printer.configfile.config["stepper_z"]["position_max"]|float %}
  G90                  ; set absolute positioning
  G1 Z{printer.configfile.config["stepper_z"]["position_max"]|float} F1000 ; Move Z axis up
  {% else %}

  G91                  ; set relative positioning
  G1 Z{Z_LIFT} F1000   ; move Z axis up
  {% endif %}

  RESTORE_GCODE_STATE NAME=END_state
  G90                  ; set absolute positioning
  G1 X{printer.toolhead.axis_minimum.x} Y{printer.toolhead.axis_maximum.y - 15}
  M107                 ; turn off fan
  # UNLOAD_FILAMENT    ; this is a good spot to call an unload 
                       ; filament macro, if you are into that sort of thing
  SET_GCODE_OFFSET Z=0 ; reset whatever babystepping you have done
  M84 X Y E            ; disable all steppers but Z
  CLEAR_PAUSE          ; clear whatever PAUSE state you may have if you have it
  BED_MESH_CLEAR

[gcode_macro HEAT_SOAK]
default_parameter_BED_TEMP: 100
default_parameter_DURATION: 20
gcode:
  M117 Heating bed...
  RESPOND TYPE=command MSG="Heating bed..."
  {% if (DURATION|int) <= 0 or (printer.heater_bed.target|int >= (BED_TEMP|int - 2)) %}
    RESPOND TYPE=command MSG="DURATION 0 or BED_TEMP already at target temperature. Skipping heat soak..."
    M190 S{BED_TEMP} # make sure we're at the requested temp and not above
  {% else %}
    M190 S{BED_TEMP} # come up to temp
    M117 Heat soak for {DURATION|int} minutes...
    RESPOND TYPE=command MSG="Heat soak for {DURATION|int} minutes..."
    M106 S255 ; run cooling fans at full power to circulate air
    {% for timer in range( DURATION|int, 0, -1) %}
      # we cycle once a minute, so we can send an update,
      # rather than just sleeping for the entire soak
      M117 Heat Soak: {timer|int}m remaining
      M105
      G4 P60000
    {% endfor %}
    M107 ; turn off cooling fans
  {% endif %}
  M117

[gcode_macro SCREWS_TILT_CALCULATE]
rename_existing: BASE_SCREWS_TILT_CALCULATE
default_parameter_BED_TEMP: 100
gcode:
  M117 Level bed...
  BED_MESH_CLEAR
  G28
  BASE_SCREWS_TILT_CALCULATE
  RESPOND TYPE=command MSG="Run SCREWS_TILT_CALCULATE as many times as necessary and BASE_RESUME when finished."
  BASE_PAUSE

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BASE_BED_MESH_CALIBRATE
default_parameter_BED_TEMP: 100
gcode:
  RESPOND TYPE=command MSG="run HEAT_SOAK and SCREWS_TILT_CALCULATE first."
  BED_MESH_CLEAR
  G28
  BASE_BED_MESH_CALIBRATE
  SAVE_CONFIG

[gcode_macro M600]
default_parameter_E: -150 # retract dist
gcode:
  PAUSE ; our PAUSE/RESUME saves state
  G91
  G0 E10 F500   ; extrude filament to get better blob on end
  G0 E{E} F600  ; retract additional filament to move out of melt zone
  G92 E0
  RESPOND TYPE=command MSG="Change and purge filament, RESUME E=0 when finished."

[gcode_macro LOAD_FILAMENT]
########### Change this ############
default_parameter_EXTRUDER: 200
default_parameter_E: 150
########### Gcode ############
gcode:
  G90
  PARK
  M109 S{EXTRUDER}            # set hotend temperature and wait
  M83                         # relative positioning on extruder    
  G0 E{E} F400                # prime extruder
  G0 E{E} F400                # prime extruder
  G0 E{E} F400                # prime extruder
  G92 E0

[gcode_macro UNLOAD_FILAMENT]
########### Change this ############
default_parameter_EXTRUDER: 200
default_parameter_E: -150
########### Gcode ############
gcode:
  PARK
  M109 S{EXTRUDER}            # set hotend temperature and wait    
  M83                         # relative positioning on extruder
  G0 E15 F400                 # extrude filament to get better blob on end
  G0 E{E} F1000               # retract additional filament to move out of melt zone
  G0 E{E} F1000               # retract additional filament to move out of melt zone
  G92 E0

[include client.cfg]

[gcode_macro PARK]
gcode:
  {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  G91
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000
  G91

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_E: 1.7
gcode:
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  PARK

[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 1.7
gcode:
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

[gcode_macro DUMP_PARAMETERS]
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set donotwant = ['bed_mesh'] %}
      {% if name1 is not in donotwant %}
        {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
      {% else %}
        {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.241
#*# pid_ki = 1.430
#*# pid_kd = 129.735
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.833
#*# pid_ki = 1.703
#*# pid_kd = 800.167
#*#
#*# [bltouch]
#*# z_offset = 1.309
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.002500, -0.049167, -0.034167, -0.037500, -0.019167, 0.042500, 0.050000
#*# 	0.024167, 0.000000, -0.001667, -0.001667, 0.017500, 0.071667, 0.071667
#*# 	0.073333, 0.013333, 0.002500, -0.000833, 0.001667, 0.049167, 0.055000
#*# 	0.065833, 0.010000, 0.012500, 0.008333, 0.039167, 0.070833, 0.070000
#*# 	0.077500, 0.010833, -0.001667, -0.019167, -0.013333, 0.027500, 0.043333
#*# 	-0.010833, -0.055000, -0.047500, -0.045833, -0.020833, 0.025833, 0.048333
#*# 	0.029167, -0.031667, -0.025833, -0.062500, -0.043333, 0.000833, 0.003333
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 15.0
#*# x_count = 7
#*# max_y = 219.96
#*# mesh_x_pps = 2
#*# max_x = 190.97
